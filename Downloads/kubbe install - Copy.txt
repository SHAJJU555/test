
   sudo mkdir cd /etc/apt/sources.list.d/

   1  sudo apt-get update


    2  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

    3  echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    4  sudo apt-get update
    5  sudo apt-get install docker-ce docker-ce-cli containerd.io
    6  docker --version 
    
    8  cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

    9  sudo systemctl enable docker
   10  sudo systemctl daemon-reload
   11  sudo systemctl restart docker
   12  sudo apt-get update
   13  sudo apt-get install -y apt-transport-https ca-certificates curl
   14  sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
   15  echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
   16  sudo apt-get update
   17  sudo apt-get install -y kubelet kubeadm kubectl
   18  sudo apt-mark hold kubelet kubeadm kubectl
   19  kubeadm init (only master mechain)
   20  history
     
    Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

 kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

kubeadm join 172.31.13.94:6443 --token inmpsm.7wlqro5epymmbb7s \
        --discovery-token-ca-cert-hash sha256:167b62102ae50e655b128a10ba517f862a6fdb6bed6f8a2ac74b902e8e4fd8a5

 Reference kubernets : 
 https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/    

Comands:
 hostnamectl set-hostname kube-master 
 
 kubectl get nodes
 
 kubectl get pod -all-namespaces ( see the pods)
 kubectl get pod 
 kubectl get pod -o wide   
 kubectl apply -f pod.yaml
 kubectl describe pod myapp
  kubectl logs myapp (containers names )
  kubectl exec -it myapp -- /bin/bash( login in container)
  kubectl apply -f service.yml
  kubectl apply -f pom.yml
  kubectl describe pod 
 
  
 manifest - manifest.yaml
 
 git applogin clone chayali 
 git clone https://github.com/tejesh555/applogin.git
 ls
 cd applogin/
 mkdir k8s
 cd k8s/
  

 
